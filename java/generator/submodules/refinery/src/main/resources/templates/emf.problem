%%%%%%%%%%%%%%%%%%%%%%
% EPackage metamodel %
%%%%%%%%%%%%%%%%%%%%%%
class EPackage {
    %contains String[1] nsURI
    %contains String[1] nsPrefix
    %contains EPackage[0..*] eSubpackages opposite eSuperPackage
    %EPackage eSuperPackage opposite eSubpackages
    contains EClassifier[0..*] eClassifiers opposite ePackage
}
abstract class EClassifier{
    container EPackage ePackage opposite eClassifiers
    %contains String[1] instanceClassName
    % EJavaClass instanceClass
    % EJavaObject defaultValue
}
class EClass extends EClassifier{
    % Boolean[1] abstract
    % Boolean[1] interface
    EClass eSuperType
    contains EReference[0..*] eReferences
    contains EAttribute[0..*] eAttributes
}
abstract class EStructuralFeature.
class EReference extends EStructuralFeature{
    % Boolean containment
    % Boolean container
    EClass[1] eReferenceType
    EReference eOpposite
}
class EAttribute extends EStructuralFeature{
    EDataType[1] eAttributeType
}
class EDataType extends EClassifier.
class EEnum extends EDataType{
    contains EEnumLiteral[0..*] literals
}
class EEnumLiteral.

!EPackage(EPackage::new).
%default !EPackage::eSubpackages(*,*).
%default !EPackage::eSuperPackage(*,*).
default !EPackage::eClassifiers(*,*).
%!EClassifier(EClassifier::new).
default !EClassifier::ePackage(*,*).
!EClass(EClass::new).
default !EClass::eSuperType(*,*).
default !EClass::eReferences(*,*).
default !EClass::eAttributes(*,*).
!EReference(EReference::new).
default !EReference::eReferenceType(*,*).
default !EReference::eOpposite(*,*).
!EAttribute(EAttribute::new).
default !EAttribute::eAttributeType(*,*).
!EDataType(EDataType::new).
!EEnum(EEnum::new).
default !EEnum::literals(*,*).
!EEnumLiteral(EEnumLiteral::new).

pred compatible(EClass sub, EClass super)<->
    EClass::eSuperType+(sub,super)
;
    sub==super.
pred structuralFeatures(EClass cls, EStructuralFeature feature) <->
    EClass::eAttributes(cls,feature);
    EClass::eReferences(cls,feature).
pred allStructuralFeatures(EClass cls, EStructuralFeature feature) <->
    compatible(cls, super),
    EClass::eAttributes(super,feature);
    compatible(cls, super),
    EClass::eReferences(super,feature).